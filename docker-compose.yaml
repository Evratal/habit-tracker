version: '3.8'

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"  # Оставлено для локальной отладки

  redis:
    image: redis:6
    ports:
      - "6379:6379"  # Оставлено для локальной отладки

  web:
    build: .
    command: >
      bash -c "python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    volumes:
      - .:/app
      - static_volume:/app/staticfiles  # Для сохранения статики между перезапусками
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  nginx:
    image: nginx:1.21-alpine
    ports:
      - "80:80"
      - "443:443"  # Для HTTPS в будущем
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - web
    restart: unless-stopped


  celery:
    build: .
    command: celery -A config worker --loglevel=info
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=info
    env_file: .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
  media_volume:
  static_volume:  # Только для статики (медиа можно добавить позже)